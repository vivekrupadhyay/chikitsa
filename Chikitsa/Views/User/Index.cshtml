@model Chikitsa.Entities.UserListViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="box box-success no-margin dvFilter">
    <div class="box-body nopdbt">
        @*@using (Ajax.BeginForm("ListFilter", "User", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "lstUsers" })){*@

        @using (Html.BeginForm("Filter", "User", FormMethod.Post, new { @class = "" }))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="objFilter.PageNumber" value="@Model.objFilter.PageNumber" />
            <input type="hidden" name="objFilter.PageSize" value="@Model.objFilter.PageSize" />
            <input type="hidden" name="objFilter.Sort" value="@Model.objFilter.Sort" />
            <div class="form-group col-md-3">
                <input type="text" class="form-control" name="objFilter.Name" value="@Model.objFilter.Name" placeholder="Name">
            </div>
            @*<div class="form-group col-md-2">
                <input type="text" class="form-control" name="objFilter.Mobile" value="@Model.objFilter.Mobile" placeholder="Mobile">
            </div>*@
                <div class="form-group col-md-3">
                    <input type="text" class="form-control" name="objFilter.Email" value="@Model.objFilter.Email" placeholder="Email">
                </div>
                <div class="form-group col-md-2">
                    @Html.DropDownListFor(model => model.objFilter.UserType, new SelectList(Model.lstUserTypes, "CodeDetailId", "DetailLongDesc"), "--User Type--", new { @class = "form-control" })
                    @Html.HiddenFor(model => model.objFilter.UserType)
                </div>
                <div class="form-group col-md-2">
                    @Html.DropDownListFor(model => model.objFilter.Status, new List<SelectListItem>
                                                    {
                                                        new SelectListItem{ Text = "--Select Status--", Value = "" },
                                                        new SelectListItem{ Text = "Active", Value = "1" },
                                                        new SelectListItem{ Text = "Inactive", Value = "2" }
                                                    }, new { @class = "form-control" })
                </div>
                <div class="form-group pull-right">
                    <button type="submit" name="submit" value="Filter" class="btn btn-info  btn-flat btnFilter"><i class="fa fa-filter"></i></button>
                    <button type="submit" name="submit" value="Clear" class="btn btn-default  btn-flat btnClear"><i class="fa fa-refresh"></i></button>
                    <button type="button" class="btn btn-default  btn-flat " onclick="location.href='@Url.Action("Details", "User")'"><i class="fa fa-plus"></i></button>
                </div>
        }
    </div>
</div>

@*<div id="lstUsers">
        @Html.Partial("_ListUser", Model)
    </div>*@


<div class="box box-info">
    <div class="box-body">
        <table id="example" class="table table-striped table-bordered dt-responsive nowrap kdtable">
            <thead>
                <tr>
                    <th class="hidden">
                        @Html.DisplayNameFor(model => model.lstUsers[0].UserId)
                    </th>
                    <th data-sort="FirstName" width="10%">
                        Name
                    </th>
                    <th width="20%">
                        @Html.DisplayNameFor(model => model.lstUsers[0].Mobile)
                    </th>
                    <th width="20%">
                        @Html.DisplayNameFor(model => model.lstUsers[0].Email)
                    </th>
                    <th width="10%">
                        @Html.DisplayNameFor(model => model.lstUsers[0].WorkingSince)
                    </th>
                    <th width="10%">
                        @Html.DisplayNameFor(model => model.lstUsers[0].WorkingSinceWithUs)
                    </th>
                    <th width="10%">
                        @Html.DisplayNameFor(model => model.lstUsers[0].Status)
                    </th>
                    <th width="10%">
                        @Html.DisplayNameFor(model => model.lstUsers[0].IsActiveOnSite)
                    </th>
                    <th width="10%">
                        @Html.DisplayNameFor(model => model.lstUsers[0].UserType)
                    </th>
                    @*<th>
                            @Html.DisplayNameFor(model => model.lstUsers[0].CompanyId)
                        </th>*@
                    <th class="nosort">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.lstUsers)
                {
                    <tr>
                        <td class="hidden">
                            @Html.DisplayFor(modelItem => item.UserId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Mobile)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @string.Format("{0:dd/MM/yyyy}", item.WorkingSince)
                        </td>
                        <td>
                            @string.Format("{0:dd/MM/yyyy}", item.WorkingSinceWithUs)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.strStatus)
                        </td>
                        <td>
                            @Html.EditorFor(model => item.IsActiveOnSite, new { htmlAttributes = new { @class = "js-switch", @disabled = "disabled", @readonly = "readonly" } })
                            @*<input type="checkbox" name="IsActiveOnSite" class="js-switch " value="@item.IsActiveOnSite" disabled readonly />
                                <input type="hidden" name="IsActiveOnSite" value="@item.IsActiveOnSite" />*@
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.strUserType)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.CompanyId)
                            </td>*@
                        <td>
                            <form method="post" action="@Url.Action("Action","User")">
                                <input type="hidden" name="objFilter.UserId" value="@item.UserId" />
                                <div class="hidden FilterBO"></div>
                                <button type="submit" name="submit" value="Edit" class="btn btn-info btn-xs btn-flat btnAction"><i class="fa fa-edit"> Edit</i></button>
                                <button type="submit" name="submit" value="Delete" onclick="return SwalConfirm('Are you sure you want to delete this record?',$(this))" class="btn btn-danger btn-xs btn-flat btnAction noloader"><i class="fa fa-trash"> Delete</i></button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @Html.Partial("_Pager", Model.QueryBO)
    </div>
</div>